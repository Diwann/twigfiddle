<?php

namespace Fuz\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Fuz\AppBundle\Entity\User;
use Fuz\AppBundle\Entity\Fiddle;

/**
 * FiddleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FiddleRepository extends EntityRepository
{

    public function getEmptyFiddle($hash = null)
    {
        $fiddle = new Fiddle();
        $fiddle->setHash($hash);
        $fiddle->setRevision(0);
        return $fiddle;
    }

    public function getFiddle($hash, $revision, User $user = null)
    {
        if (is_null($hash))
        {
            return $this->getEmptyFiddle();
        }

        $query = $this->_em->createQuery("
            SELECT f
            FROM Fuz\AppBundle\Entity\Fiddle f
            WHERE f.hash = :hash
            AND f.revision = :revision
            AND (
                f.visibility <> :private
                OR f.user = :user
            )
        ");

        $params = array (
                'hash' => $hash,
                'revision' => $revision <= 0 ? : $revision,
                'private' => Fiddle::VISIBILITY_PRIVATE,
                'user' => $user ? $user->getId() : -1,
        );

        $fiddle = $query
           ->setParameters($params)
           ->getOneOrNullResult()
        ;

        return $fiddle ? : $this->getEmptyFiddle($hash);
    }

    public function incrementVisitCount(Fiddle $fiddle)
    {
        if ($fiddle->getId())
        {
            $fiddle->setVisitsCount($fiddle->getVisitsCount() + 1);
            $this->_em->persist($fiddle);
            $this->_em->flush();
        }
    }

    public function hashExists($hash)
    {
        $query = $this->_em->createQuery("
            SELECT COUNT(f.id)
            FROM Fuz\AppBundle\Entity\Fiddle f
            WHERE f.hash = :hash
        ");

        $params = array (
                'hash' => $hash,
        );

        $count = $query
           ->setParameters($params)
           ->getSingleScalarResult()
        ;

        return $count > 0;
    }

}
