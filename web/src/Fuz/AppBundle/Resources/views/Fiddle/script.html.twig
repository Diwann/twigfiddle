{# FuzAppBundle:Fiddle:script.html.twig #}

<div id="template-container" class="hide"></div>

<script type="text/javascript">

$(document).ready(function() {

    {#
     #  Add a template button
     #  Used in FuzAppBundle:Fiddle:templates-pane.html.twig
     #}
    $('body').on('click', '.add-template', function () {
        var templates = $('#templates');
        var prototype = templates.data('prototype');
        var max_templates = 10; {# fiddle.max_templates #}
        for (var index = 0; (index < max_templates); index++) {
            var template = $(prototype.replace(/__name__/g, index));
            var container = $('#template-container');
            var id = container.html(template).find('.template').data('id');
            container.empty();
            if ($('#row-' + id).length === 0) {
                template.find(".text-danger").remove().end().appendTo(templates);
                if ($('.template').length === max_templates) {
                    $('#add-template').addClass('hide');
                }
                break ;
            }
        }
        $('.delete-template').removeClass('hide');
        $('.main-template').removeClass('hide');
    });

    {#
     #  Remove a template button
     #  Used in FuzAppBundle:Fiddle:templates-theme.html.twig
     #}
    $('body').on('click', '.delete-template', function () {
       if ($('.template').length === 1) {
           return ;
       }
       var id = '#row-' + $(this).data('id');
       if ($(id).find(':checkbox').prop('checked')) {
           var first = $('.template').not(id).first();
           first.find(':checkbox').prop('checked', true);
           first.find('.main-template').removeClass('btn-default').addClass('btn-primary').attr('disabled', 'disabled');
       }
       $(id).remove();
       $('#add-template').removeClass('hide');
       if ($('.template').length === 1) {
           $('.delete-template').addClass('hide');
           $('.main-template').addClass('hide');
       }
    });
    if ($('.template').length > 1) {
        $('.delete-template').removeClass('hide');
        $('.main-template').removeClass('hide');
    }

    {#
     #  Set as main template button
     #  Used in FuzAppBundle:Fiddle:templates-theme.html.twig
     #}
    $('body').on('click', '.main-template', function (e) {
        var ticked = $(this).data('id');
        $('.template').each(function() {
            var that = $(this);
            if (that.data('id') === ticked) {
                that.find(':checkbox').prop('checked', true);
                that.find('.main-template').removeClass('btn-default').addClass('btn-primary').attr('disabled', 'disabled');
            } else {
                that.find(':checkbox').prop('checked', false);
                that.find('.main-template').removeClass('btn-primary').addClass('btn-default').removeAttr('disabled');
            }
        });
    });

    {#
     #  Template syntax highlighting loader
     #  Used in FuzAppBundle:Fiddle:templates-theme.html.twig
     #}
     var initCodeMirrorForTemplate = function(id, mode) {
        return CodeMirror.fromTextArea(document.getElementById(id), {
           lineNumbers: true,
           mode: {
               name: "jinja2",
               htmlMode: true
           },
           indentUnit: 4,
           indentWithTabs: false,
           enterMode: "keep",
           tabMode: "shift",
           smartIndent: true,
           matchBrackets: true,
           fixedGutter: true,
           extraKeys: {
              Tab: function(cm) {
                 var spaces = Array(cm.getOption("indentUnit") + 1).join(" ");
                 cm.replaceSelection(spaces, 'end');
              }
           }
       });
     };
     $('.codemirror-template').each(function() {
         var that = $(this);
         initCodeMirrorForTemplate(that.attr('id'), that.data('mode'));
     });

});

</script>
